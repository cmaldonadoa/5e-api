type Background {
name: String
source: String
skillProficiencies: BackgroundSkillProficiencies
languageProficiencies: BackgroundLanguageProficiencies
startingEquipment: [BackgroundStartingEquipment]
entries: [BackgroundEntries]
feats: BackgroundFeats
toolProficiencies: BackgroundToolProficiencies
additionalSpells: [BackgroundAdditionalSpells]
skillToolLanguageProficiencies: BackgroundSkillToolLanguageProficiencies
}

type BackgroundEntries {
type: String
style: String
items: [BackgroundEntriesItems]
internalId: Int
name: String
data: BackgroundEntriesData
entry: String
parentId: Int
colLabels: [String]
colStyles: [String]
rows: [BackgroundEntriesRowsList]
caption: String
id: String
}

type BackgroundFeats {
items: [String]
}

type BackgroundToolProficiencies {
items: [String]
choose: BackgroundToolProficienciesChoose
}

type BackgroundToolProficienciesChoose {
from: [String]
count: Int
}

type BackgroundEntriesItems {
type: String
name: String
entry: String
}

type BackgroundLanguageProficiencies {
items: [String]
choose: BackgroundLanguageProficienciesChoose
}

type BackgroundLanguageProficienciesChoose {
from: [String]
count: Int
}

type BackgroundSkillProficiencies {
items: [String]
choose: BackgroundSkillProficienciesChoose
}

type BackgroundSkillProficienciesChoose {
from: [String]
count: Int
}

type BackgroundStartingEquipment {
_: [BackgroundStartingEquipment_]
a: [BackgroundStartingEquipmentA]
b: [BackgroundStartingEquipmentB]
c: [BackgroundStartingEquipmentC]
d: [BackgroundStartingEquipmentD]
}

type BackgroundStartingEquipmentD {
special: String
}

type BackgroundStartingEquipmentC {
special: String
}

type BackgroundStartingEquipmentB {
special: String
tool: String
item: String
}

type BackgroundStartingEquipmentA {
item: String
displayName: String
special: String
quantity: Int
tool: String
}

type BackgroundStartingEquipment_ {
item: String
displayName: String
special: String
quantity: Int
value: Int
tool: String
worthValue: Int
}

type BackgroundEntriesRows {
_0: String
_1: String
}

type BackgroundEntriesRowsList {
items: [BackgroundEntriesRows]
}

type BackgroundEntriesData {
isFeature: Boolean
tableInclude: Boolean
}

type BackgroundAdditionalSpells {
expanded: BackgroundAdditionalSpellsExpanded
}

type BackgroundAdditionalSpellsExpanded {
s0: [String]
s1: [String]
s2: [String]
s3: [String]
s4: [String]
s5: [String]
}

type BackgroundSkillToolLanguageProficiencies {
choose: BackgroundSkillToolLanguageProficienciesChoose
}

type BackgroundSkillToolLanguageProficienciesChoose {
from: [String]
count: Int
}