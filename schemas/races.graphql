type RacesRaceEntries {
type: String
name: String
id: Int
children: [Int]
entry: String
parentId: Int
items: [RacesRaceEntriesItems]
caption: String
colLabels: [String]
colStyles: [String]
rows: [RacesRaceEntriesRowsList]
style: String
}

type RacesRaceAdditionalSpellsSpellcastingAbilityChoose {
from: [String]
count: Int
}

type RacesRaceAdditionalSpellsSpellcastingAbility {
choose: RacesRaceAdditionalSpellsSpellcastingAbilityChoose
items: [String]
}

type RacesRaceAdditionalSpellsSpells {
item: String
_meta: RacesRaceAdditionalSpellsSpells_meta
items: [String]
choose: RacesRaceAdditionalSpellsSpellsChoose
}

type RacesRaceAdditionalSpells {
spellcastingAbility: RacesRaceAdditionalSpellsSpellcastingAbility
spells: [RacesRaceAdditionalSpellsSpells]
}

type RacesRaceSpeed {
walk: Int
}

type RacesRaceAbility {
items: [String]
choose: RacesRaceAbilityChoose
}

type RacesRaceLanguageProficiencies {
items: [String]
choose: RacesRaceLanguageProficienciesChoose
}

type RacesRaceAdditionalSpellsSpells_meta {
longRest: Int
}

type RacesRaceSkillProficiencies {
items: [String]
choose: RacesRaceSkillProficienciesChoose
}

type RacesRaceToolProficiencies {
items: [String]
}

type RacesRaceSkillProficienciesChoose {
from: [String]
count: Int
}

type RacesRaceAbilityChoose {
from: [String]
count: Int
}

type RacesRaceEntriesItems {
type: String
entry: String
name: String
}

type RacesRaceEntriesRows {
_0: String
_1: String
_2: String
}

type RacesRaceEntriesRowsList {
items: [RacesRaceEntriesRows]
}

type RacesRaceWeaponProficiencies {
items: [String]
choose: RacesRaceWeaponProficienciesChoose
}

type RacesRaceWeaponProficienciesChoose {
fromFilter: String
count: Int
}

type RacesRaceArmorProficiencies {
items: [String]
}

type RacesRaceLanguageProficienciesChoose {
from: [String]
count: Int
}

type RacesRaceFeats {
items: [String]
}

type RacesRaceAdditionalSpellsSpellsChoose {
fromFilter: String
count: Int
}

type RacesRace {
name: String
source: String
size: [String]
entries: [RacesRaceEntries]
additionalSpells: RacesRaceAdditionalSpells
speed: RacesRaceSpeed
ability: RacesRaceAbility
languageProficiencies: RacesRaceLanguageProficiencies
skillProficiencies: RacesRaceSkillProficiencies
toolProficiencies: RacesRaceToolProficiencies
weaponProficiencies: RacesRaceWeaponProficiencies
armorProficiencies: RacesRaceArmorProficiencies
feats: RacesRaceFeats
}

type RacesSubraceAbility {
items: [String]
choose: RacesSubraceAbilityChoose
}

type RacesSubraceEntries {
name: String
type: String
id: Int
children: [Int]
entry: String
parentId: Int
data: RacesSubraceEntriesData
caption: String
colLabels: [String]
colStyles: [String]
rows: [RacesSubraceEntriesRowsList]
style: String
items: [RacesSubraceEntriesItems]
}

type RacesSubraceLanguageProficiencies {
items: [String]
}

type RacesSubraceEntriesData {
overwrite: String
}

type RacesSubraceAdditionalSpellsSpellcastingAbility {
items: [String]
choose: RacesSubraceAdditionalSpellsSpellcastingAbilityChoose
}

type RacesSubraceAdditionalSpellsSpells_meta {
longRest: Int
shortRest: Int
}

type RacesSubraceAdditionalSpellsSpells {
item: String
_meta: RacesSubraceAdditionalSpellsSpells_meta
items: [String]
choose: RacesSubraceAdditionalSpellsSpellsChoose
}

type RacesSubraceAdditionalSpells {
spellcastingAbility: RacesSubraceAdditionalSpellsSpellcastingAbility
spells: [RacesSubraceAdditionalSpellsSpells]
}

type RacesSubraceOverwrite {
languageProficiencies: Boolean
ability: Boolean
skillProficiencies: Boolean
}

type RacesSubraceEntriesRows {
_0: String
_1: String
}

type RacesSubraceEntriesRowsList {
items: [RacesSubraceEntriesRows]
}

type RacesSubraceArmorProficiencies {
items: [String]
}

type RacesSubraceWeaponProficiencies {
items: [String]
}

type RacesSubraceEntriesItems {
type: String
name: String
entry: String
}

type RacesSubraceSpeed {
walk: Int
}

type RacesSubraceAdditionalSpellsSpellsChoose {
fromFilter: String
count: Int
}

type RacesSubraceAdditionalSpellsSpellcastingAbilityChoose {
from: [String]
count: Int
}

type RacesSubraceSkillToolLanguageProficienciesChoose {
from: [String]
count: Int
}

type RacesSubraceSkillToolLanguageProficiencies {
choose: RacesSubraceSkillToolLanguageProficienciesChoose
}

type RacesSubraceAbilityChoose {
from: [String]
count: Int
}

type RacesSubraceToolProficiencies {
items: [String]
}

type RacesSubraceSkillProficiencies {
items: [String]
}

type RacesSubraceFeats {
items: [String]
}

type RacesSubrace {
name: String
source: String
raceName: String
raceSource: String
ability: RacesSubraceAbility
entries: [RacesSubraceEntries]
languageProficiencies: RacesSubraceLanguageProficiencies
additionalSpells: RacesSubraceAdditionalSpells
overwrite: RacesSubraceOverwrite
armorProficiencies: RacesSubraceArmorProficiencies
weaponProficiencies: RacesSubraceWeaponProficiencies
speed: RacesSubraceSpeed
skillToolLanguageProficiencies: RacesSubraceSkillToolLanguageProficiencies
toolProficiencies: RacesSubraceToolProficiencies
skillProficiencies: RacesSubraceSkillProficiencies
feats: RacesSubraceFeats
}

type Races {
race: [RacesRace]
subrace: [RacesSubrace]
}