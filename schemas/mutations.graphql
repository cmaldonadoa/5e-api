type Mutation {
    register(username: String!, password: String!): Boolean
    login(username: String!, password: String!): String!
    createCharacter(name: String!): Character
    setCharacterName(characterName: String!, name: String!): Character
    setCharacterRace(
        characterName: String!
        raceName: String!
        raceSource: String!
        subraceName: String!
        subraceSource: String!
        raceProficiencies: CharacterProficienciesInput
        raceAbilityScores: CharacterAbilityScoresInput
        raceSpellcastingAbility: String
        raceSpells: [CharacterSpellInput]
        subraceProficiencies: CharacterProficienciesInput
        subraceAbilityScores: CharacterAbilityScoresInput
        subraceSpellcastingAbility: String
        subraceSpells: [CharacterSpellInput]
    ): Character
    addCharacterClass(characterName: String!, name: String!): Character
    setCharacterSubclass(
        characterName: String!
        className: String!
        name: String!
    ): Character
    setCharacterBackground(
        characterName: String!
        name: String!
        proficiencies: CharacterProficienciesInput
        items: [CharacterItemInput]
    ): Character
    addFeat(
        characterName: String!
        name: String!
        proficiencies: CharacterProficienciesInput
        expertises: CharacterProficienciesInput
        abilityScores: CharacterAbilityScoresInput
        spellcastingAbility: String
        spells: [CharacterSpellInput]
    ): Character
    addOptionalFeature(
        characterName: String!
        name: String!
        spellcastingAbility: String
        spells: [CharacterSpellInput]
        sourceType: CharacterDataSource!
        sourceText: String
    ): Character
    setAbilityScores(
        characterName: String!
        abilityScores: CharacterAbilityScoresInput
        source: String
    ): Character
    addAbilityScores(
        characterName: String!
        abilityScores: CharacterAbilityScoresInput
        source: String
    ): Character
    addProficiencies(
        characterName: String!
        proficiencies: CharacterProficienciesInput
        source: String
    ): Character
    setHitPointMaximum(characterName: String!, hitPoint: Int!): Character
    setHitPointCurrent(characterName: String!, hitPoint: Int!): Character
    addItem(characterName: String!, item: CharacterItemInput!): Character
    updateItem(characterName: String!, item: CharacterItemInput!): Character
    updateCoins(characterName: String!, coins: CharacterCoinsInput!): Character
    addFeature(
        characterName: String!
        feature: CharacterFeatureInput!
        source: String
    ): Character
    updateFeature(
        characterName: String!
        feature: CharacterFeatureInput!
    ): Character
    removeFeature(characterName: String!, id: ID!): Character
    levelUp(characterName: String!, className: String!): Character
}
