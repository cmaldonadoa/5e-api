type BaseItem {
name: String
source: String
types: [String]
rarity: String
properties: [String]
weaponCategory: String
range: String
isWeapon: Boolean
isFirearm: Boolean
reload: Int
ammoType: String
damageType: String
damage: BaseItemDamage
packContents: [BaseItemPackContents]
armorClass: Int
isArmor: Boolean
entries: [BaseItemEntries]
strength: String
stealth: Boolean
}

type BaseItemEntries {
type: String
entry: String
id: Int
name: String
children: [Int]
parentId: Int
}

type BaseItemDamage {
_1: String
_2: String
}

type Item {
name: String
source: String
rarity: String
attuned: Boolean
attunedBy: [ItemAttunedBy]
bonusSpellAttack: String
bonusSpellSaveDC: String
types: [String]
baseItem: String
weaponCategory: String
properties: [String]
damage: ItemDamage
bonusWeapon: String
isWeapon: Boolean
grantsProficiency: Boolean
entries: [ItemEntries]
crew: Int
vehicleArmorClass: Int
vehicleHealth: Int
vehicleSpeed: Float
vehicleMaxPassengers: Int
vehicleMaxCargo: Float
attachedSpells: [String]
modifySpeed: ItemModifySpeed
modifyAbility: ItemModifyAbility
armorClass: Int
vehicleSeeAlso: [String]
range: String
strength: String
stealth: Boolean
isCursed: Boolean
bonusAC: String
isPoison: Boolean
poisonTypes: [String]
packContents: [ItemPackContents]
vehicleThreshold: Int
bonusWeaponDamage: String
carryingCapacity: Int
mountSpeed: Int
bonusSavingThrow: ItemBonusSavingThrow
deckSeeAlso: [String]
ammoType: String
bonusAbilityCheck: String
bonusProficiencyBonus: String
minCrew: Int
maxCrew: Int
isFirearm: Boolean
}

type ItemProperty {
abbreviation: String
source: String
name: String
entries: [ItemPropertyEntries]
}

type ItemPropertyEntries {
type: String
entry: String
id: Int
}

type BaseItemPackContents {
item: String
quantity: Int
special: Boolean
}

type ItemType {
abbreviation: String
source: String
name: String
entries: [ItemTypeEntries]
}

type ItemEntries {
type: String
entry: String
id: Int
name: String
children: [Int]
parentId: Int
caption: String
colLabels: [String]
colStyles: [String]
rows: [ItemEntriesRowsList]
source: String
page: Int
items: [ItemEntriesItems]
}

type ItemEntriesItems {
type: String
entry: String
}

type ItemEntriesRows {
_0: String
_1: String
}

type ItemEntriesRowsList {
items: [ItemEntriesRows]
}

type ItemTypeEntries {
type: String
entry: String
id: Int
name: String
children: [Int]
parentId: Int
source: String
page: Int
caption: String
colLabels: [String]
colStyles: [String]
rows: [ItemTypeEntriesRowsList]
}

type ItemDamage {
_1: String
_2: String
}

type ItemTypeEntriesRows {
_0: String
_1: String
}

type ItemAttunedBy {
class: String
spellcasting: Boolean
background: String
alignment: [String]
creatureType: String
race: String
psionics: Boolean
}

type ItemTypeEntriesRowsList {
items: [ItemTypeEntriesRows]
}

type ItemModifySpeed {
equal: ItemModifySpeedEqual
multiply: ItemModifySpeedMultiply
static: ItemModifySpeedStatic
}

type ItemModifySpeedStatic {
walk: Int
swim: Int
fly: Int
}

type ItemModifySpeedMultiply {
walk: Int
}

type ItemModifyAbility {
static: ItemModifyAbilityStatic
con: Int
wis: Int
choose: [ItemModifyAbilityChoose]
from: [String]
count: Int
amount: Int
str: Int
dex: Int
int: Int
cha: Int
}

type ItemModifyAbilityChoose {
from: [String]
count: Int
amount: Int
}

type ItemModifyAbilityStatic {
con: Int
str: Int
int: Int
}

type ItemModifySpeedEqual {
fly: String
climb: String
}

type ItemPackContents {
item: String
quantity: Int
special: Boolean
}

type ItemBonusSavingThrow {
int: String
_: String
str: String
cha: String
con: String
dex: String
wis: String
}